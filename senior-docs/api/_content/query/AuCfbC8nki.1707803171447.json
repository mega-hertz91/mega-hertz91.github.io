{"_path":"/osnovy/agregation-data","_dir":"osnovy","_draft":false,"_partial":false,"_locale":"","title":"Агрегация данных","description":"","body":{"type":"root","children":[{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"агрегация-данных"},"children":[{"type":"text","value":"Агрегация данных"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Отдельный класс задач, который не может обойтись без циклов, называется агрегированием данных. К таким задачам относятся поиск максимального, минимального, суммы, среднего арифметического и т.п. Их главная особенность в том, что результат зависит от всего набора данных. Для расчета суммы нужно сложить все числа, для вычисления максимального нужно сравнить все числа."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"С такими задачами хорошо знакомы все, кто занимаются числами, например бухгалтеры или маркетологи. Обычно их выполняют в таблицах наподобие Microsoft Excel или Google Spreadsheets."}]},{"type":"element","tag":"h3","props":{"id":"числа"},"children":[{"type":"text","value":"Числа"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Разберем самый простой пример – поиск суммы набора чисел. Реализуем функцию, которая складывает числа в указанном диапазоне, включая границы. Диапазоном в данном случае называется ряд чисел от какого-то начала до определенного конца. Например, диапазон "},{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"1, 10"}]},{"type":"text","value":" включает в себя все целые числа от 1 до 10."}]},{"type":"element","tag":"pre","props":{"code":"sumNumbersFromRange(5, 7); // 5 + 6 + 7 = 18\nsumNumbersFromRange(1, 2); // 1 + 2 = 3\n\n// [1, 1] диапазон с одинаковым началом и концом – тоже диапазон\n// он в себя включает ровно одно число – саму границу диапазона\nsumNumbersFromRange(1, 1); // 1\nsumNumbersFromRange(100, 100); // 100\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"sumNumbersFromRange(5, 7); // 5 + 6 + 7 = 18\nsumNumbersFromRange(1, 2); // 1 + 2 = 3\n\n// [1, 1] диапазон с одинаковым началом и концом – тоже диапазон\n// он в себя включает ровно одно число – саму границу диапазона\nsumNumbersFromRange(1, 1); // 1\nsumNumbersFromRange(100, 100); // 100\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Для реализации этого кода нам понадобится цикл, так как сложение чисел – это итеративный процесс (он повторяется для каждого числа), а количество итераций зависит от размера диапазона."}]},{"type":"element","tag":"h3","props":{"id":"строки"},"children":[{"type":"text","value":"Строки"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Агрегация применяется не только к числам, но и к строкам. Это такие задачи, в которых строка формируется динамически, то есть заранее неизвестно, какого она размера и что будет содержать."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Представьте себе функцию, которая умеет «умножать» строку, то есть она повторяет ее указанное количество раз:"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"repeat('hexlet', 3); // 'hexlethexlethexlet'"}]}]},{"type":"element","tag":"pre","props":{"code":"const repeat = (text, times) => {\n  // Нейтральный элемент для строк – пустая строка\n  let result = '';\n  let i = 1;\n\n  while (i <= times) {\n    // Каждый раз добавляем строку к результату\n    result = `${result}${text}`;\n    i = i + 1;\n  }\n\n  return result;\n};\n"},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const repeat = (text, times) => {\n  // Нейтральный элемент для строк – пустая строка\n  let result = '';\n  let i = 1;\n\n  while (i <= times) {\n    // Каждый раз добавляем строку к результату\n    result = `${result}${text}`;\n    i = i + 1;\n  }\n\n  return result;\n};\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"агрегация-данных","depth":2,"text":"Агрегация данных","children":[{"id":"числа","depth":3,"text":"Числа"},{"id":"строки","depth":3,"text":"Строки"}]}]}},"_type":"markdown","_id":"content:3.Основы:4.agregation-data.md","_source":"content","_file":"3.Основы/4.agregation-data.md","_extension":"md"}